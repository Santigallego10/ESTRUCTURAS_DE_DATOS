package co.edu.cue.ed.bolsaSupermercado.app;

import co.edu.cue.ed.bolsaSupermercado.model.BolsaSupermercado;
import co.edu.cue.ed.bolsaSupermercado.model.Cleaning;
import co.edu.cue.ed.bolsaSupermercado.model.Dairy;
import co.edu.cue.ed.bolsaSupermercado.model.Fruit;
import co.edu.cue.ed.bolsaSupermercado.model.NonPerishable;
import co.edu.cue.ed.bolsaSupermercado.model.Product;

public class Main {

	public static void main(String[] args) {

		
		//BolsaSupermercado<Product> supermarketList= new BolsaSupermercado<Product>(5);
	
		BolsaSupermercado<Fruit> fruitBag = new BolsaSupermercado<>();
        BolsaSupermercado<Cleaning> cleaningBag = new BolsaSupermercado<>();
        BolsaSupermercado<Dairy> dairyBag = new BolsaSupermercado<>();
        BolsaSupermercado<NonPerishable> nonPerishableBag = new BolsaSupermercado<>();

        fruitBag.addProduct(new Fruit("apple fuji", 1200.00, 2500.0, "red"));
        fruitBag.addProduct(new Fruit("peach", 800.00, 1800.0,"orange"));
        fruitBag.addProduct(new Fruit("grapes",1000.00, 3500.0,"green"));
        fruitBag.addProduct(new Fruit("lemons",1200.00,  1500.0,"yellow"));
        fruitBag.addProduct(new Fruit("watermelon",1200.00, 4000.0, "red" ));
        
        cleaningBag.addProduct(new Cleaning("antibacterial", 1690.0, "Cif", 0.75));
        cleaningBag.addProduct(new Cleaning("dishwasher", 2290.0, "Quix", 1.2));
        cleaningBag.addProduct(new Cleaning("Cream Cleanser", 1390.0,"chlorine", 0.95));
        cleaningBag.addProduct(new Cleaning("Gel with lavender",  1380.0, "Lysoform", 0.45));
        cleaningBag.addProduct(new Cleaning("Lavender Disinfectant",1330.0, "Lysol",  0.9));
        
        dairyBag.addProduct(new Dairy ("Semi-skimmed Chocolate Flavored Milk",1000.0, 32, 1150));
        dairyBag.addProduct(new Dairy ("milk cream box",200.0, 4,  800));
        dairyBag.addProduct(new Dairy ("White Skim Milk Box", 1000.0, 31,720));
        dairyBag.addProduct(new Dairy ("Yoghurt Shake Strawberry Flavor Bag",1000.0, 37,  1190));
        dairyBag.addProduct(new Dairy ("Soprole Salted Butter",250.0, 2, 1750));
        
        nonPerishableBag.addProduct(new NonPerishable(170, 95, "Atún Lomitos en Agua Angelmo", 960));
        nonPerishableBag.addProduct(new NonPerishable(425, 560, "Jurel Natural Lata", 1120));
        nonPerishableBag.addProduct(new NonPerishable(380, 234, "Porotos Negros Listos Para Servir Caja", 1030));
        nonPerishableBag.addProduct(new NonPerishable(1000, 3340, "Arroz Grano Largo Ancho Grado 1", 1320));
        nonPerishableBag.addProduct(new NonPerishable(1000, 3536, "Porotos Hallado Bolsa", 1990));

        System.out.println("-------------------------------- Frutas ---------------------------------");
        for (Fruit fruit : fruitBag.getProducts()) {
            System.out.println("-------------------------------- " +  fruit.getName());
            System.out.println("Price: " + fruit.getPrice());
            System.out.println("Weight (gr): " + fruit.getWeight());
            System.out.println("Color: " + fruit.getColor());
        }

        System.out.println("-------------------------------- Limpieza ---------------------------------");
        for (Cleaning prod : cleaningBag.getProducts()) {
            System.out.println("-------------------------------- " +  prod.getName());
            System.out.println("Price: " + prod.getPrice());
            System.out.println("Components: " + prod.getComponents());
            System.out.println("Liters: " + prod.getLiters());
        }

        System.out.println("-------------------------------- Lacteo ---------------------------------");
        for (Dairy prod : dairyBag.getProducts()) {
            System.out.println("-------------------------------- " +  prod.getName());
            System.out.println("Price: " + prod.getPrice());
            System.out.println("Cantidad (gr/cc): " + prod.getCantidad());
            System.out.println("Proteinas (gr): " + prod.getProteinas());
        }

        System.out.println("-------------------------------- NoPerecible ---------------------------------");
        for (NoPerecible prod : bolsaNoPerecibles.getProductos()) {
            System.out.println("-------------------------------- " +  prod.getNombre());
            System.out.println("Precio: " + prod.getPrecio());
            System.out.println("Calorias (kCal): " + prod.getCalorias());
            System.out.println("Contenido neto (gr): " + prod.getContenido());
        }

	
	}

}
